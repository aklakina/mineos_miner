---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by levi.
--- DateTime: 2/19/2024 6:53 PM
---

require('Logger')

local logger = Logger:new(Logger.levels.INFO, "Environment")

blockType = {
    WASTE = {},
    FUEL = {},
    OTHER = {},
    UNKNOWN = {}
}

Environment = {
    checkedBlocks = {},
    wasteBlocks = {},
    fuels = {}
}

-- load wasteBlocks from file
function loadWasteBlocks()
    io.open("wasteBlocks", "r")
    local line = io.read()
    while line do
        table.insert(Environment.wasteBlocks, line)
        line = io.read()
    end
    io.close()
end

-- load fuels from file
function loadFuels()
    io.open("fuels", "r")
    local line = io.read()
    while line do
        table.insert(Environment.fuels, line)
        line = io.read()
    end
    io.close()
end

Environment.wasteBlocks = loadWasteBlocks()
Environment.fuels = loadFuels()

function Environment:new()
    local o = {}
    setmetatable(o, self)
    self.__index = self
    return o
end

function Environment:isBlockChecked(x, y, z)
    return self.checkedBlocks[x] and self.checkedBlocks[x][y] and self.checkedBlocks[x][y][z]
end

--[[
    Checks if a block has been checked and if it is a waste block
    If the block is a waste block, if it is then return true
    If the block is not a waste block, then return false

    @param x - the x coordinate of the block
    @param y - the y coordinate of the block
    @param z - the z coordinate of the block
    @param blockType - the metadata of block on position (x, y, z)
]]

function Environment:checkBlockType(block_type)
    if self.wasteBlocks[block_type] then
        return blockType.WASTE
    end
    if self.fuels[block_type] then
        return blockType.FUEL
    end
    return blockType.OTHER
end

function Environment:checkBlock(x, y, z, block_type)
    self.checkedBlocks[x] = self.checkedBlocks[x] or {}
    self.checkedBlocks[x][y] = self.checkedBlocks[x][y] or {}
    self.checkedBlocks[x][y][z] = true
    if block_type then
        return self:checkBlockType(block_type)
    end
    return blockType.UNKNOWN
end

