# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: add permissions
        run: chmod u+rwx -R ./*

      - name: Setup Lua with Luver
        uses: MunifTanjim/luver-action@v1.2.1
        with:
          # Lua version to set as default.
          default: 5.4.6
          # Lua versions to install.
          lua_versions: 5.4.6

      - name: Create the build directory with the test sources
        run: ./build.sh

      - name: Run lua unit tests
        run: cd ./build && /home/runner/.local/share/luver/lua-versions/5.4.6/installation/bin/lua unitTests.lua

  compile:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Get lua minifier
        uses: actions/checkout@v4.1.1
        with:
          repository: stravant/LuaMinify
          path: LuaMinify

      - name: add permissions
        run: chmod u+rwx -R ./*

      - name: Setup Lua with Luver
        uses: MunifTanjim/luver-action@v1.2.1
        with:
          # Lua version to set as default.
          default: 5.4.6
          # Lua versions to install.
          lua_versions: 5.4.6

      - name: Run the compile script
        run: ./compile.sh
        env:
          PATH: /home/runner/.local/share/luver/lua-versions/5.4.6/installation/bin:$PATH

      - name: Zip the compiled files
        run: zip -r compiled.zip ./compiled

      - name: Upload the compiled files
        uses: actions/upload-artifact@v2
        with:
          name: compiled
          path: compiled.zip